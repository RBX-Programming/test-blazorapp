@page "/extinvoices/details"
@using Microsoft.EntityFrameworkCore
@using BlazorAppScaffold.Models
@inject IDbContextFactory<BlazorAppScaffold.Data.BlazorAppContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>ExtInvoice</h2>
    <hr />
    @if (extinvoice is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Id</dt>
            <dd class="col-sm-10">@extinvoice.Id</dd>
            <dt class="col-sm-2">RbxPoNumber</dt>
            <dd class="col-sm-10">@extinvoice.RbxPoNumber</dd>
            <dt class="col-sm-2">BranchId</dt>
            <dd class="col-sm-10">@extinvoice.BranchId</dd>
            <dt class="col-sm-2">SupplierShortName</dt>
            <dd class="col-sm-10">@extinvoice.SupplierShortName</dd>
            <dt class="col-sm-2">ProjectName</dt>
            <dd class="col-sm-10">@extinvoice.ProjectName</dd>
            <dt class="col-sm-2">Comments</dt>
            <dd class="col-sm-10">@extinvoice.Comments</dd>
            <dt class="col-sm-2">ExpirationDate</dt>
            <dd class="col-sm-10">@extinvoice.ExpirationDate</dd>
            <dt class="col-sm-2">PaymentTerms</dt>
            <dd class="col-sm-10">@extinvoice.PaymentTerms</dd>
            <dt class="col-sm-2">DueDate</dt>
            <dd class="col-sm-10">@extinvoice.DueDate</dd>
            <dt class="col-sm-2">TotalNet</dt>
            <dd class="col-sm-10">@extinvoice.TotalNet</dd>
            <dt class="col-sm-2">CurrencyType</dt>
            <dd class="col-sm-10">@extinvoice.CurrencyType</dd>
            <dt class="col-sm-2">ExchangeRate</dt>
            <dd class="col-sm-10">@extinvoice.ExchangeRate</dd>
            <dt class="col-sm-2">NetEuro</dt>
            <dd class="col-sm-10">@extinvoice.NetEuro</dd>
            <dt class="col-sm-2">Vat</dt>
            <dd class="col-sm-10">@extinvoice.Vat</dd>
            <dt class="col-sm-2">TotalEuro</dt>
            <dd class="col-sm-10">@extinvoice.TotalEuro</dd>
            <dt class="col-sm-2">DepartmentsId</dt>
            <dd class="col-sm-10">@extinvoice.DepartmentsId</dd>
            <dt class="col-sm-2">Uploaded</dt>
            <dd class="col-sm-10">@extinvoice.Uploaded</dd>
            <dt class="col-sm-2">Paid</dt>
            <dd class="col-sm-10">@extinvoice.Paid</dd>
            <dt class="col-sm-2">PaymentDate</dt>
            <dd class="col-sm-10">@extinvoice.PaymentDate</dd>
            <dt class="col-sm-2">PaymentDays</dt>
            <dd class="col-sm-10">@extinvoice.PaymentDays</dd>
            <dt class="col-sm-2">Concept</dt>
            <dd class="col-sm-10">@extinvoice.Concept</dd>
        </dl>
        <div>
            <a href="@($"/extinvoices/edit?rbxinvnumber={extinvoice.RbxInvNumber}")">Edit</a> |
            <a href="@($"/extinvoices")">Back to List</a>
        </div>
    }
</div>

@code {
    private ExtInvoice? extinvoice;

    [SupplyParameterFromQuery]
    private string RbxInvNumber { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        extinvoice = await context.ExtInvoices.FirstOrDefaultAsync(m => m.RbxInvNumber == RbxInvNumber);

        if (extinvoice is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
