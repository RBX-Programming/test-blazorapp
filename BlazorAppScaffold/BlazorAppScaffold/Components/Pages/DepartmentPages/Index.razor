@page "/departments"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using BlazorAppScaffold.Models
@using BlazorAppScaffold.Data
@implements IAsyncDisposable
@inject IDbContextFactory<BlazorAppScaffold.Data.BlazorAppContext> DbFactory
@rendermode InteractiveServer

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="departments/create">Create New</a>
</p>

<QuickGrid Class="table" Items="FilteredDepartments">
    <PropertyColumn Property="department => department.Name" Sortable="true">
        <ColumnOptions>
            <div>
                <input type="search" autofocus @bind="departmentFilter" @bind:event="oninput"/>
            </div>
        </ColumnOptions>
    </PropertyColumn>

    <TemplateColumn Context="department">
        <a href="@($"departments/edit?id={department.Id}")">Edit</a> |
        <a href="@($"departments/details?id={department.Id}")">Details</a> |
        <a href="@($"departments/delete?id={department.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private BlazorAppContext context = default!;
    string departmentFilter = string.Empty;
    IQueryable<Department> FilteredDepartments => context.Departments.Where(department => department.Name.Contains(departmentFilter));
    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }
    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
