@page "/outsourcings/create"
@using Microsoft.EntityFrameworkCore
@using BlazorAppScaffold.Models
@inject IDbContextFactory<BlazorAppScaffold.Data.BlazorAppContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Outsourcing</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Outsourcing" OnValidSubmit="AddOutsourcing" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="projectname" class="form-label">ProjectName:</label> 
                <InputText id="projectname" @bind-Value="Outsourcing.ProjectName" class="form-control" /> 
                <ValidationMessage For="() => Outsourcing.ProjectName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="description" class="form-label">Description:</label> 
                <InputText id="description" @bind-Value="Outsourcing.Description" class="form-control" /> 
                <ValidationMessage For="() => Outsourcing.Description" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="date" class="form-label">Date:</label> 
                <InputDate id="date" @bind-Value="Outsourcing.Date" class="form-control" /> 
                <ValidationMessage For="() => Outsourcing.Date" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="deliverydate" class="form-label">DeliveryDate:</label> 
                <InputDate id="deliverydate" @bind-Value="Outsourcing.DeliveryDate" class="form-control" /> 
                <ValidationMessage For="() => Outsourcing.DeliveryDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="suppliershortname" class="form-label">SupplierShortName:</label> 
                <InputText id="suppliershortname" @bind-Value="Outsourcing.SupplierShortName" class="form-control" /> 
                <ValidationMessage For="() => Outsourcing.SupplierShortName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="amountinvoiced" class="form-label">AmountInvoiced:</label> 
                <InputNumber id="amountinvoiced" @bind-Value="Outsourcing.AmountInvoiced" class="form-control" /> 
                <ValidationMessage For="() => Outsourcing.AmountInvoiced" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/outsourcings">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Outsourcing Outsourcing { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddOutsourcing()
    {
        using var context = DbFactory.CreateDbContext();
        context.Outsourcings.Add(Outsourcing);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/outsourcings");
    }
}
