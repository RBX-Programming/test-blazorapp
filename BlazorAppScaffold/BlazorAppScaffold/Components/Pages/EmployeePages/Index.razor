@page "/employees"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using BlazorAppScaffold.Models
@using BlazorAppScaffold.Data
@implements IAsyncDisposable
@inject IDbContextFactory<BlazorAppScaffold.Data.BlazorAppContext> DbFactory
@rendermode InteractiveServer

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="employees/create">Create New</a>
</p>

<QuickGrid Class="table" Items="FilteredEmployees">
    <PropertyColumn Property="employee => employee.Active" />
    <PropertyColumn Property="employee => employee.Name" sortable="true">
        <ColumnOptions>
            <div>
                <input type="search" autofocus @bind="employeeFilter" @bind:event="oninput" />
            </div>
        </ColumnOptions>
    </PropertyColumn>

    <PropertyColumn Property="employee => employee.Email" />
    <PropertyColumn Property="employee => employee.Phone" />
    <PropertyColumn Property="employee => employee.SocialSecurityNumber" />
    <PropertyColumn Property="employee => employee.HourlyCost" />
    <PropertyColumn Property="employee => employee.ExtraHourlyCost" />
    <PropertyColumn Property="employee => employee.UserId" Sortable="true" />
    <PropertyColumn Property="employee => employee.BranchId" />

    <TemplateColumn Context="employee">
        <a href="@($"employees/edit?id={employee.Id}")">Edit</a> |
        <a href="@($"employees/details?id={employee.Id}")">Details</a> |
        <a href="@($"employees/delete?id={employee.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>


@code {
    private BlazorAppContext context = default!;
    string employeeFilter = string.Empty;
    IQueryable<Employee> FilteredEmployees => context.Employees.Where(employee => employee.Name.Contains(employeeFilter));
    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }
    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
