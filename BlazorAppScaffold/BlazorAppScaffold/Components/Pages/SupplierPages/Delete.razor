@page "/suppliers/delete"
@using Microsoft.EntityFrameworkCore
@using BlazorAppScaffold.Models
@inject IDbContextFactory<BlazorAppScaffold.Data.BlazorAppContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Supplier</h2>
    <hr />
    @if (supplier is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Id</dt>
            <dd class="col-sm-10">@supplier.Id</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">SupplierFullName</dt>
            <dd class="col-sm-10">@supplier.SupplierFullName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">SupplierBranch</dt>
            <dd class="col-sm-10">@supplier.SupplierBranch</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">SupplierReg</dt>
            <dd class="col-sm-10">@supplier.SupplierReg</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">SupplierAddress</dt>
            <dd class="col-sm-10">@supplier.SupplierAddress</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">City</dt>
            <dd class="col-sm-10">@supplier.City</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CountryId</dt>
            <dd class="col-sm-10">@supplier.CountryId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">SupplierAccount</dt>
            <dd class="col-sm-10">@supplier.SupplierAccount</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">SupplierSwift</dt>
            <dd class="col-sm-10">@supplier.SupplierSwift</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CrmId</dt>
            <dd class="col-sm-10">@supplier.CrmId</dd>
        </dl>
        <EditForm method="post" Model="supplier" OnValidSubmit="DeleteSupplier" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(supplier is null)">Delete</button> |
            <a href="/suppliers">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Supplier? supplier;

    [SupplyParameterFromQuery]
    private string SupplierShortName { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        supplier = await context.Suppliers.FirstOrDefaultAsync(m => m.SupplierShortName == SupplierShortName);

        if (supplier is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteSupplier()
    {
        using var context = DbFactory.CreateDbContext();
        context.Suppliers.Remove(supplier!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/suppliers");
    }
}
