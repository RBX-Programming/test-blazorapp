@page "/branches/delete"
@using Microsoft.EntityFrameworkCore
@using BlazorAppScaffold.Models
@inject IDbContextFactory<BlazorAppScaffold.Data.BlazorAppContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Branch</h2>
    <hr />
    @if (branch is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Branch1</dt>
            <dd class="col-sm-10">@branch.Branch1</dd>
        </dl>
        <EditForm method="post" Model="branch" OnValidSubmit="DeleteBranch" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(branch is null)">Delete</button> |
            <a href="/branches">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Branch? branch;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        branch = await context.Branches.FirstOrDefaultAsync(m => m.Id == Id);

        if (branch is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteBranch()
    {
        using var context = DbFactory.CreateDbContext();
        context.Branches.Remove(branch!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/branches");
    }
}
